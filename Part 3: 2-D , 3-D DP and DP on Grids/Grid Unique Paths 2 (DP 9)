/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#1 Recursion | TC = O(2^ (MxN)) | SC= O(length of path) = O(m-1 + n-1) -> stack space will go length of path deeper 

public class Solution {
    public static int mazeObstacles(int n, int m, ArrayList<ArrayList<Integer>> mat) {
        return helper(n-1, m-1 , mat);
    }
    private static int helper(int i , int j, ArrayList<ArrayList<Integer>> mat){
        //base case
        if(i==0 && j==0) return 1; //when reaching destination
        if(i < 0 || j < 0) return 0; //when going out of bound
        if(i>= 0 && j>=0 && mat.get(i).get(j) == -1) return 0; 
        
        int left = countPaths(i , j-1 , mat);
        int up = countPaths(i-1 , j , mat);
        return left + up;
  }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
